package Helpers;

import DAO.Impl.ProductDAOImpl;
import DAO.ProductDAO;
import Exceptions.ProductNotFoundException;
import Models.Product;

import java.util.HashSet;
import java.util.InputMismatchException;
import java.util.Scanner;
import java.util.Set;

public class UpdateHelper {
    static ProductDAO productDAO=new ProductDAOImpl();
    public static Product update(Scanner scanner,int productId){
        Product productToUpdate = null;

        try {
            productToUpdate=productDAO.getProductById(productId,false);
            System.out.print("üõ†Ô∏è Enter the number of fields you want to update (max 4): ");
            int numberOfUpdation = scanner.nextInt();
            if(numberOfUpdation>4)throw new IllegalArgumentException("‚ö†Ô∏è Number of updates cannot be greater than 4.");
            Set<Integer> selected = new HashSet<>();
            while (numberOfUpdation-- > 0) {
                System.out.println("üîΩ Choose a field to update:");
                System.out.println("1Ô∏è‚É£  Name");
                System.out.println("2Ô∏è‚É£  Type");
                System.out.println("3Ô∏è‚É£  Quantity");
                System.out.println("4Ô∏è‚É£  Price");

                int updatechoice = scanner.nextInt();
                scanner.nextLine();

                if (selected.contains(updatechoice)) {
                    System.out.println("‚ö†Ô∏è You already chose this option. Pick another.");
                    numberOfUpdation++;
                    continue;
                } else {
                    selected.add(updatechoice);
                }
                switch (updatechoice) {
                    case 1:
                        System.out.print("‚úèÔ∏è Enter new Name: ");
                        String newName = scanner.nextLine();
                        productToUpdate.setProductName(newName);
                        break;
                    case 2:
                        System.out.print("üè∑Ô∏è Enter new Type: ");
                        String newType = scanner.nextLine();
                        productToUpdate.setProductType(newType);
                        break;
                    case 3:
                        System.out.print("üì¶ Enter new Quantity: ");
                        int newQty = scanner.nextInt();
                        productToUpdate.setAvailableQty(newQty);
                        break;
                    case 4:
                        System.out.print("üí≤ Enter new Price: ");
                        double newPrice = scanner.nextDouble();
                        productToUpdate.setPrice(newPrice);
                        break;
                    default:
                        System.out.println("‚ùå Invalid choice! Please select a number between 1‚Äì4.");
                        numberOfUpdation++;
                        break;
                }
            }
        }
        catch (InputMismatchException e)
        {
            System.out.println("üö´ Invalid input! Please enter the correct data type.");
            return null;
        }
        catch (IllegalArgumentException | ProductNotFoundException e)
        {
            System.out.println("üö´ " + e.getMessage());
            return null;
        }

        return productToUpdate;
    }
}
